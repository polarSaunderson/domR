% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/which_line.R
\name{which_line}
\alias{which_line}
\title{Print out the line number/s a function is called on}
\usage{
which_line(functionName = "which_line", skipInNested = TRUE)
}
\arguments{
\item{functionName}{The text to search for in the file; if not
\code{\link[=which_line]{which_line()}} (the default), it should match the name of the parents
function that it is being called in.}

\item{skipInNested}{When nested in another function (for example \code{\link[=cat4]{cat4()}}),
should the call to that function (e.g.\code{\link[=cat4]{cat4()}}) be included in the print
out of where \code{\link[=which_line]{which_line()}} was called from? TRUE by default.}
}
\description{
This function is not complete, but it is getting somewhere...
Imagine when debugging, but without actual errors. You're just trying to
find out the value of a variable at different stages. We want to know
which line of a file that is on.

This function is mainly designed to be used inside the \code{\link[=cat4]{cat4()}} function.
That function is a combination of \code{\link[=cat2]{cat2()}} and \code{\link[=which_line]{which_line()}}, so it
tells us what the variable name is, the value, and what line it was
printed on.

It requires rstudioapi (i.e. it only works with that, so not pure R).

The only "slight" issue, is that it currently prints out every instance
of the 'functionName' in the file it is called in... (totally defeating
half of its point!).

The code was inspired by this stackoverflow question:
\url{https://stackoverflow.com/questions/59537482/how-to-get-line-number-of-a-function-call-in-r}.

It uses \code{\link[=readLines]{readLines()}}, so searches through the last saved version of the
file - i.e. save the files before using it!
}
